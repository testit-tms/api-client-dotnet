/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// GetXlsxTestPointsByTestPlanModel
    /// </summary>
    [DataContract(Name = "GetXlsxTestPointsByTestPlanModel")]
    public partial class GetXlsxTestPointsByTestPlanModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetXlsxTestPointsByTestPlanModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetXlsxTestPointsByTestPlanModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetXlsxTestPointsByTestPlanModel" /> class.
        /// </summary>
        /// <param name="includeName">includeName (required).</param>
        /// <param name="includeSection">includeSection (required).</param>
        /// <param name="includePriority">includePriority (required).</param>
        /// <param name="includeSourceType">includeSourceType (required).</param>
        /// <param name="includeAutomated">includeAutomated (required).</param>
        /// <param name="includeStatus">includeStatus (required).</param>
        /// <param name="includeDuration">includeDuration (required).</param>
        /// <param name="includeCreationDate">includeCreationDate (required).</param>
        /// <param name="includeAuthor">includeAuthor (required).</param>
        /// <param name="includeModificationDate">includeModificationDate (required).</param>
        /// <param name="includeModifiedBy">includeModifiedBy (required).</param>
        /// <param name="includeTags">includeTags (required).</param>
        /// <param name="includeIterations">includeIterations (required).</param>
        /// <param name="customAttributesIds">customAttributesIds.</param>
        /// <param name="configurationIds">configurationIds.</param>
        public GetXlsxTestPointsByTestPlanModel(bool includeName = default(bool), bool includeSection = default(bool), bool includePriority = default(bool), bool includeSourceType = default(bool), bool includeAutomated = default(bool), bool includeStatus = default(bool), bool includeDuration = default(bool), bool includeCreationDate = default(bool), bool includeAuthor = default(bool), bool includeModificationDate = default(bool), bool includeModifiedBy = default(bool), bool includeTags = default(bool), bool includeIterations = default(bool), List<Guid> customAttributesIds = default(List<Guid>), List<Guid> configurationIds = default(List<Guid>))
        {
            this.IncludeName = includeName;
            this.IncludeSection = includeSection;
            this.IncludePriority = includePriority;
            this.IncludeSourceType = includeSourceType;
            this.IncludeAutomated = includeAutomated;
            this.IncludeStatus = includeStatus;
            this.IncludeDuration = includeDuration;
            this.IncludeCreationDate = includeCreationDate;
            this.IncludeAuthor = includeAuthor;
            this.IncludeModificationDate = includeModificationDate;
            this.IncludeModifiedBy = includeModifiedBy;
            this.IncludeTags = includeTags;
            this.IncludeIterations = includeIterations;
            this.CustomAttributesIds = customAttributesIds;
            this.ConfigurationIds = configurationIds;
        }

        /// <summary>
        /// Gets or Sets IncludeName
        /// </summary>
        [DataMember(Name = "includeName", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeName { get; set; }

        /// <summary>
        /// Gets or Sets IncludeSection
        /// </summary>
        [DataMember(Name = "includeSection", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeSection { get; set; }

        /// <summary>
        /// Gets or Sets IncludePriority
        /// </summary>
        [DataMember(Name = "includePriority", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludePriority { get; set; }

        /// <summary>
        /// Gets or Sets IncludeSourceType
        /// </summary>
        [DataMember(Name = "includeSourceType", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeSourceType { get; set; }

        /// <summary>
        /// Gets or Sets IncludeAutomated
        /// </summary>
        [DataMember(Name = "includeAutomated", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeAutomated { get; set; }

        /// <summary>
        /// Gets or Sets IncludeStatus
        /// </summary>
        [DataMember(Name = "includeStatus", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeStatus { get; set; }

        /// <summary>
        /// Gets or Sets IncludeDuration
        /// </summary>
        [DataMember(Name = "includeDuration", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeDuration { get; set; }

        /// <summary>
        /// Gets or Sets IncludeCreationDate
        /// </summary>
        [DataMember(Name = "includeCreationDate", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeCreationDate { get; set; }

        /// <summary>
        /// Gets or Sets IncludeAuthor
        /// </summary>
        [DataMember(Name = "includeAuthor", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeAuthor { get; set; }

        /// <summary>
        /// Gets or Sets IncludeModificationDate
        /// </summary>
        [DataMember(Name = "includeModificationDate", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeModificationDate { get; set; }

        /// <summary>
        /// Gets or Sets IncludeModifiedBy
        /// </summary>
        [DataMember(Name = "includeModifiedBy", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets IncludeTags
        /// </summary>
        [DataMember(Name = "includeTags", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeTags { get; set; }

        /// <summary>
        /// Gets or Sets IncludeIterations
        /// </summary>
        [DataMember(Name = "includeIterations", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeIterations { get; set; }

        /// <summary>
        /// Gets or Sets CustomAttributesIds
        /// </summary>
        [DataMember(Name = "customAttributesIds", EmitDefaultValue = true)]
        public List<Guid> CustomAttributesIds { get; set; }

        /// <summary>
        /// Gets or Sets ConfigurationIds
        /// </summary>
        [DataMember(Name = "configurationIds", EmitDefaultValue = true)]
        public List<Guid> ConfigurationIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetXlsxTestPointsByTestPlanModel {\n");
            sb.Append("  IncludeName: ").Append(IncludeName).Append("\n");
            sb.Append("  IncludeSection: ").Append(IncludeSection).Append("\n");
            sb.Append("  IncludePriority: ").Append(IncludePriority).Append("\n");
            sb.Append("  IncludeSourceType: ").Append(IncludeSourceType).Append("\n");
            sb.Append("  IncludeAutomated: ").Append(IncludeAutomated).Append("\n");
            sb.Append("  IncludeStatus: ").Append(IncludeStatus).Append("\n");
            sb.Append("  IncludeDuration: ").Append(IncludeDuration).Append("\n");
            sb.Append("  IncludeCreationDate: ").Append(IncludeCreationDate).Append("\n");
            sb.Append("  IncludeAuthor: ").Append(IncludeAuthor).Append("\n");
            sb.Append("  IncludeModificationDate: ").Append(IncludeModificationDate).Append("\n");
            sb.Append("  IncludeModifiedBy: ").Append(IncludeModifiedBy).Append("\n");
            sb.Append("  IncludeTags: ").Append(IncludeTags).Append("\n");
            sb.Append("  IncludeIterations: ").Append(IncludeIterations).Append("\n");
            sb.Append("  CustomAttributesIds: ").Append(CustomAttributesIds).Append("\n");
            sb.Append("  ConfigurationIds: ").Append(ConfigurationIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
