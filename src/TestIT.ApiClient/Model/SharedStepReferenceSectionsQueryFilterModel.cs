/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// SharedStepReferenceSectionsQueryFilterModel
    /// </summary>
    [DataContract(Name = "SharedStepReferenceSectionsQueryFilterModel")]
    public partial class SharedStepReferenceSectionsQueryFilterModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SharedStepReferenceSectionsQueryFilterModel" /> class.
        /// </summary>
        /// <param name="name">Name of section.</param>
        /// <param name="createdByIds">Collection of identifiers of users who created work item.</param>
        /// <param name="modifiedByIds">Collection of identifiers of users who applied last modification to work item.</param>
        /// <param name="createdDate">Date and time of work item creation.</param>
        /// <param name="modifiedDate">Date and time of work item last modification.</param>
        public SharedStepReferenceSectionsQueryFilterModel(string name = default(string), List<Guid> createdByIds = default(List<Guid>), List<Guid> modifiedByIds = default(List<Guid>), DateTimeRangeSelectorModel createdDate = default(DateTimeRangeSelectorModel), DateTimeRangeSelectorModel modifiedDate = default(DateTimeRangeSelectorModel))
        {
            this.Name = name;
            this.CreatedByIds = createdByIds;
            this.ModifiedByIds = modifiedByIds;
            this.CreatedDate = createdDate;
            this.ModifiedDate = modifiedDate;
        }

        /// <summary>
        /// Name of section
        /// </summary>
        /// <value>Name of section</value>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Collection of identifiers of users who created work item
        /// </summary>
        /// <value>Collection of identifiers of users who created work item</value>
        [DataMember(Name = "createdByIds", EmitDefaultValue = true)]
        public List<Guid> CreatedByIds { get; set; }

        /// <summary>
        /// Collection of identifiers of users who applied last modification to work item
        /// </summary>
        /// <value>Collection of identifiers of users who applied last modification to work item</value>
        [DataMember(Name = "modifiedByIds", EmitDefaultValue = true)]
        public List<Guid> ModifiedByIds { get; set; }

        /// <summary>
        /// Date and time of work item creation
        /// </summary>
        /// <value>Date and time of work item creation</value>
        [DataMember(Name = "createdDate", EmitDefaultValue = true)]
        public DateTimeRangeSelectorModel CreatedDate { get; set; }

        /// <summary>
        /// Date and time of work item last modification
        /// </summary>
        /// <value>Date and time of work item last modification</value>
        [DataMember(Name = "modifiedDate", EmitDefaultValue = true)]
        public DateTimeRangeSelectorModel ModifiedDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SharedStepReferenceSectionsQueryFilterModel {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreatedByIds: ").Append(CreatedByIds).Append("\n");
            sb.Append("  ModifiedByIds: ").Append(ModifiedByIds).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  ModifiedDate: ").Append(ModifiedDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
