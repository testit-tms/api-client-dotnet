/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// CreateWorkItemPreviewsApiModel
    /// </summary>
    [DataContract(Name = "CreateWorkItemPreviewsApiModel")]
    public partial class CreateWorkItemPreviewsApiModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateWorkItemPreviewsApiModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateWorkItemPreviewsApiModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateWorkItemPreviewsApiModel" /> class.
        /// </summary>
        /// <param name="sectionId">sectionId (required).</param>
        /// <param name="previews">previews (required).</param>
        /// <param name="attributes">attributes.</param>
        /// <param name="link">link.</param>
        public CreateWorkItemPreviewsApiModel(Guid sectionId = default(Guid), List<WorkItemPreviewApiModel> previews = default(List<WorkItemPreviewApiModel>), Dictionary<string, Object> attributes = default(Dictionary<string, Object>), PreviewsIssueLinkApiModel link = default(PreviewsIssueLinkApiModel))
        {
            this.SectionId = sectionId;
            // to ensure "previews" is required (not null)
            if (previews == null)
            {
                throw new ArgumentNullException("previews is a required property for CreateWorkItemPreviewsApiModel and cannot be null");
            }
            this.Previews = previews;
            this.Attributes = attributes;
            this.Link = link;
        }

        /// <summary>
        /// Gets or Sets SectionId
        /// </summary>
        [DataMember(Name = "sectionId", IsRequired = true, EmitDefaultValue = true)]
        public Guid SectionId { get; set; }

        /// <summary>
        /// Gets or Sets Previews
        /// </summary>
        [DataMember(Name = "previews", IsRequired = true, EmitDefaultValue = true)]
        public List<WorkItemPreviewApiModel> Previews { get; set; }

        /// <summary>
        /// Gets or Sets Attributes
        /// </summary>
        [DataMember(Name = "attributes", EmitDefaultValue = true)]
        public Dictionary<string, Object> Attributes { get; set; }

        /// <summary>
        /// Gets or Sets Link
        /// </summary>
        [DataMember(Name = "link", EmitDefaultValue = true)]
        public PreviewsIssueLinkApiModel Link { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateWorkItemPreviewsApiModel {\n");
            sb.Append("  SectionId: ").Append(SectionId).Append("\n");
            sb.Append("  Previews: ").Append(Previews).Append("\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
