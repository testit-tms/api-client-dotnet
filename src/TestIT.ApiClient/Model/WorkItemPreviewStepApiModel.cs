/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// WorkItemPreviewStepApiModel
    /// </summary>
    [DataContract(Name = "WorkItemPreviewStepApiModel")]
    public partial class WorkItemPreviewStepApiModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkItemPreviewStepApiModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WorkItemPreviewStepApiModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkItemPreviewStepApiModel" /> class.
        /// </summary>
        /// <param name="number">number (required).</param>
        /// <param name="action">action (required).</param>
        /// <param name="expected">expected (required).</param>
        public WorkItemPreviewStepApiModel(int number = default(int), string action = default(string), string expected = default(string))
        {
            this.Number = number;
            // to ensure "action" is required (not null)
            if (action == null)
            {
                throw new ArgumentNullException("action is a required property for WorkItemPreviewStepApiModel and cannot be null");
            }
            this.Action = action;
            // to ensure "expected" is required (not null)
            if (expected == null)
            {
                throw new ArgumentNullException("expected is a required property for WorkItemPreviewStepApiModel and cannot be null");
            }
            this.Expected = expected;
        }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name = "number", IsRequired = true, EmitDefaultValue = true)]
        public int Number { get; set; }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = true)]
        public string Action { get; set; }

        /// <summary>
        /// Gets or Sets Expected
        /// </summary>
        [DataMember(Name = "expected", IsRequired = true, EmitDefaultValue = true)]
        public string Expected { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkItemPreviewStepApiModel {\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  Expected: ").Append(Expected).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Action (string) minLength
            if (this.Action != null && this.Action.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Action, length must be greater than 1.", new [] { "Action" });
            }

            // Expected (string) minLength
            if (this.Expected != null && this.Expected.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Expected, length must be greater than 1.", new [] { "Expected" });
            }

            yield break;
        }
    }

}
