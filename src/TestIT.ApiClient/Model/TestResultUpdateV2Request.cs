/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// TestResultUpdateV2Request
    /// </summary>
    [DataContract(Name = "TestResultUpdateV2Request")]
    public partial class TestResultUpdateV2Request : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Outcome
        /// </summary>
        [DataMember(Name = "outcome", EmitDefaultValue = true)]
        [Obsolete]
        public TestResultOutcome? Outcome { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TestResultUpdateV2Request" /> class.
        /// </summary>
        /// <param name="failureClassIds">failureClassIds.</param>
        /// <param name="outcome">outcome.</param>
        /// <param name="statusCode">statusCode.</param>
        /// <param name="comment">comment.</param>
        /// <param name="links">links.</param>
        /// <param name="stepResults">stepResults.</param>
        /// <param name="attachments">attachments.</param>
        /// <param name="durationInMs">durationInMs.</param>
        /// <param name="duration">duration.</param>
        /// <param name="stepComments">stepComments.</param>
        /// <param name="setupResults">setupResults.</param>
        /// <param name="teardownResults">teardownResults.</param>
        /// <param name="message">message.</param>
        /// <param name="trace">trace.</param>
        public TestResultUpdateV2Request(List<Guid> failureClassIds = default(List<Guid>), TestResultOutcome? outcome = default(TestResultOutcome?), string statusCode = default(string), string comment = default(string), List<Link> links = default(List<Link>), List<StepResultApiModel> stepResults = default(List<StepResultApiModel>), List<AttachmentUpdateRequest> attachments = default(List<AttachmentUpdateRequest>), long? durationInMs = default(long?), long? duration = default(long?), List<TestResultStepCommentUpdateRequest> stepComments = default(List<TestResultStepCommentUpdateRequest>), List<AttachmentPutModelAutoTestStepResultsModel> setupResults = default(List<AttachmentPutModelAutoTestStepResultsModel>), List<AttachmentPutModelAutoTestStepResultsModel> teardownResults = default(List<AttachmentPutModelAutoTestStepResultsModel>), string message = default(string), string trace = default(string))
        {
            this.FailureClassIds = failureClassIds;
            this.Outcome = outcome;
            this.StatusCode = statusCode;
            this.Comment = comment;
            this.Links = links;
            this.StepResults = stepResults;
            this.Attachments = attachments;
            this.DurationInMs = durationInMs;
            this.Duration = duration;
            this.StepComments = stepComments;
            this.SetupResults = setupResults;
            this.TeardownResults = teardownResults;
            this.Message = message;
            this.Trace = trace;
        }

        /// <summary>
        /// Gets or Sets FailureClassIds
        /// </summary>
        [DataMember(Name = "failureClassIds", EmitDefaultValue = true)]
        public List<Guid> FailureClassIds { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name = "statusCode", EmitDefaultValue = true)]
        public string StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name = "comment", EmitDefaultValue = true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name = "links", EmitDefaultValue = true)]
        public List<Link> Links { get; set; }

        /// <summary>
        /// Gets or Sets StepResults
        /// </summary>
        [DataMember(Name = "stepResults", EmitDefaultValue = true)]
        public List<StepResultApiModel> StepResults { get; set; }

        /// <summary>
        /// Gets or Sets Attachments
        /// </summary>
        [DataMember(Name = "attachments", EmitDefaultValue = true)]
        public List<AttachmentUpdateRequest> Attachments { get; set; }

        /// <summary>
        /// Gets or Sets DurationInMs
        /// </summary>
        [DataMember(Name = "durationInMs", EmitDefaultValue = true)]
        [Obsolete]
        public long? DurationInMs { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        [DataMember(Name = "duration", EmitDefaultValue = true)]
        public long? Duration { get; set; }

        /// <summary>
        /// Gets or Sets StepComments
        /// </summary>
        [DataMember(Name = "stepComments", EmitDefaultValue = true)]
        public List<TestResultStepCommentUpdateRequest> StepComments { get; set; }

        /// <summary>
        /// Gets or Sets SetupResults
        /// </summary>
        [DataMember(Name = "setupResults", EmitDefaultValue = true)]
        public List<AttachmentPutModelAutoTestStepResultsModel> SetupResults { get; set; }

        /// <summary>
        /// Gets or Sets TeardownResults
        /// </summary>
        [DataMember(Name = "teardownResults", EmitDefaultValue = true)]
        public List<AttachmentPutModelAutoTestStepResultsModel> TeardownResults { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = true)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Trace
        /// </summary>
        [DataMember(Name = "trace", EmitDefaultValue = true)]
        public string Trace { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TestResultUpdateV2Request {\n");
            sb.Append("  FailureClassIds: ").Append(FailureClassIds).Append("\n");
            sb.Append("  Outcome: ").Append(Outcome).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  StepResults: ").Append(StepResults).Append("\n");
            sb.Append("  Attachments: ").Append(Attachments).Append("\n");
            sb.Append("  DurationInMs: ").Append(DurationInMs).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  StepComments: ").Append(StepComments).Append("\n");
            sb.Append("  SetupResults: ").Append(SetupResults).Append("\n");
            sb.Append("  TeardownResults: ").Append(TeardownResults).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Trace: ").Append(Trace).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // DurationInMs (long?) minimum
            if (this.DurationInMs < (long?)0)
            {
                yield return new ValidationResult("Invalid value for DurationInMs, must be a value greater than or equal to 0.", new [] { "DurationInMs" });
            }

            // Duration (long?) minimum
            if (this.Duration < (long?)0)
            {
                yield return new ValidationResult("Invalid value for Duration, must be a value greater than or equal to 0.", new [] { "Duration" });
            }

            yield break;
        }
    }

}
