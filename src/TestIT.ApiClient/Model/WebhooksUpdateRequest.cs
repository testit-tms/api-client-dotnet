/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// WebhooksUpdateRequest
    /// </summary>
    [DataContract(Name = "WebhooksUpdateRequest")]
    public partial class WebhooksUpdateRequest : IEquatable<WebhooksUpdateRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhooksUpdateRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WebhooksUpdateRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhooksUpdateRequest" /> class.
        /// </summary>
        /// <param name="filter">filter (required).</param>
        /// <param name="model">model (required).</param>
        /// <param name="extractor">extractor (required).</param>
        public WebhooksUpdateRequest(WebhooksUpdateRequestFilter filter = default(WebhooksUpdateRequestFilter), WebhooksUpdateRequestModel model = default(WebhooksUpdateRequestModel), WebhooksDeleteRequestExtractor extractor = default(WebhooksDeleteRequestExtractor))
        {
            // to ensure "filter" is required (not null)
            if (filter == null)
            {
                throw new ArgumentNullException("filter is a required property for WebhooksUpdateRequest and cannot be null");
            }
            this.Filter = filter;
            // to ensure "model" is required (not null)
            if (model == null)
            {
                throw new ArgumentNullException("model is a required property for WebhooksUpdateRequest and cannot be null");
            }
            this.Model = model;
            // to ensure "extractor" is required (not null)
            if (extractor == null)
            {
                throw new ArgumentNullException("extractor is a required property for WebhooksUpdateRequest and cannot be null");
            }
            this.Extractor = extractor;
        }

        /// <summary>
        /// Gets or Sets Filter
        /// </summary>
        [DataMember(Name = "filter", IsRequired = true, EmitDefaultValue = true)]
        public WebhooksUpdateRequestFilter Filter { get; set; }

        /// <summary>
        /// Gets or Sets Model
        /// </summary>
        [DataMember(Name = "model", IsRequired = true, EmitDefaultValue = true)]
        public WebhooksUpdateRequestModel Model { get; set; }

        /// <summary>
        /// Gets or Sets Extractor
        /// </summary>
        [DataMember(Name = "extractor", IsRequired = true, EmitDefaultValue = true)]
        public WebhooksDeleteRequestExtractor Extractor { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebhooksUpdateRequest {\n");
            sb.Append("  Filter: ").Append(Filter).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("  Extractor: ").Append(Extractor).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WebhooksUpdateRequest);
        }

        /// <summary>
        /// Returns true if WebhooksUpdateRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WebhooksUpdateRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WebhooksUpdateRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Filter == input.Filter ||
                    (this.Filter != null &&
                    this.Filter.Equals(input.Filter))
                ) && 
                (
                    this.Model == input.Model ||
                    (this.Model != null &&
                    this.Model.Equals(input.Model))
                ) && 
                (
                    this.Extractor == input.Extractor ||
                    (this.Extractor != null &&
                    this.Extractor.Equals(input.Extractor))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Filter != null)
                {
                    hashCode = (hashCode * 59) + this.Filter.GetHashCode();
                }
                if (this.Model != null)
                {
                    hashCode = (hashCode * 59) + this.Model.GetHashCode();
                }
                if (this.Extractor != null)
                {
                    hashCode = (hashCode * 59) + this.Extractor.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
