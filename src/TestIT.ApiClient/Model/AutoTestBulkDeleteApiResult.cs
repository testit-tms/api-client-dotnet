/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// AutoTestBulkDeleteApiResult
    /// </summary>
    [DataContract(Name = "AutoTestBulkDeleteApiResult")]
    public partial class AutoTestBulkDeleteApiResult : IEquatable<AutoTestBulkDeleteApiResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AutoTestBulkDeleteApiResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AutoTestBulkDeleteApiResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AutoTestBulkDeleteApiResult" /> class.
        /// </summary>
        /// <param name="deletedCount">deletedCount (required).</param>
        /// <param name="inProgressCount">inProgressCount (required).</param>
        public AutoTestBulkDeleteApiResult(int deletedCount = default(int), int inProgressCount = default(int))
        {
            this.DeletedCount = deletedCount;
            this.InProgressCount = inProgressCount;
        }

        /// <summary>
        /// Gets or Sets DeletedCount
        /// </summary>
        [DataMember(Name = "deletedCount", IsRequired = true, EmitDefaultValue = true)]
        public int DeletedCount { get; set; }

        /// <summary>
        /// Gets or Sets InProgressCount
        /// </summary>
        [DataMember(Name = "inProgressCount", IsRequired = true, EmitDefaultValue = true)]
        public int InProgressCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AutoTestBulkDeleteApiResult {\n");
            sb.Append("  DeletedCount: ").Append(DeletedCount).Append("\n");
            sb.Append("  InProgressCount: ").Append(InProgressCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AutoTestBulkDeleteApiResult);
        }

        /// <summary>
        /// Returns true if AutoTestBulkDeleteApiResult instances are equal
        /// </summary>
        /// <param name="input">Instance of AutoTestBulkDeleteApiResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AutoTestBulkDeleteApiResult input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.DeletedCount == input.DeletedCount ||
                    this.DeletedCount.Equals(input.DeletedCount)
                ) && 
                (
                    this.InProgressCount == input.InProgressCount ||
                    this.InProgressCount.Equals(input.InProgressCount)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.DeletedCount.GetHashCode();
                hashCode = (hashCode * 59) + this.InProgressCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
