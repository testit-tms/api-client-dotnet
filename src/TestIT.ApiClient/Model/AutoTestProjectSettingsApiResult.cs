/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// AutoTestProjectSettingsApiResult
    /// </summary>
    [DataContract(Name = "AutoTestProjectSettingsApiResult")]
    public partial class AutoTestProjectSettingsApiResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AutoTestProjectSettingsApiResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AutoTestProjectSettingsApiResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AutoTestProjectSettingsApiResult" /> class.
        /// </summary>
        /// <param name="projectId">Unique ID of the project. (required).</param>
        /// <param name="isFlakyAuto">Indicates if the status \&quot;Flaky/Stable\&quot; sets automatically (required).</param>
        /// <param name="flakyStabilityPercentage">Stability percentage for autotest flaky computing (required).</param>
        /// <param name="flakyTestRunCount">Last test run count for autotest flaky computing (required).</param>
        /// <param name="rerunEnabled">Auto rerun enabled (required).</param>
        /// <param name="rerunAttemptsCount">Auto rerun attempt count (required).</param>
        public AutoTestProjectSettingsApiResult(Guid projectId = default(Guid), bool isFlakyAuto = default(bool), int flakyStabilityPercentage = default(int), int flakyTestRunCount = default(int), bool rerunEnabled = default(bool), int rerunAttemptsCount = default(int))
        {
            this.ProjectId = projectId;
            this.IsFlakyAuto = isFlakyAuto;
            this.FlakyStabilityPercentage = flakyStabilityPercentage;
            this.FlakyTestRunCount = flakyTestRunCount;
            this.RerunEnabled = rerunEnabled;
            this.RerunAttemptsCount = rerunAttemptsCount;
        }

        /// <summary>
        /// Unique ID of the project.
        /// </summary>
        /// <value>Unique ID of the project.</value>
        [DataMember(Name = "projectId", IsRequired = true, EmitDefaultValue = true)]
        public Guid ProjectId { get; set; }

        /// <summary>
        /// Indicates if the status \&quot;Flaky/Stable\&quot; sets automatically
        /// </summary>
        /// <value>Indicates if the status \&quot;Flaky/Stable\&quot; sets automatically</value>
        [DataMember(Name = "isFlakyAuto", IsRequired = true, EmitDefaultValue = true)]
        public bool IsFlakyAuto { get; set; }

        /// <summary>
        /// Stability percentage for autotest flaky computing
        /// </summary>
        /// <value>Stability percentage for autotest flaky computing</value>
        [DataMember(Name = "flakyStabilityPercentage", IsRequired = true, EmitDefaultValue = true)]
        public int FlakyStabilityPercentage { get; set; }

        /// <summary>
        /// Last test run count for autotest flaky computing
        /// </summary>
        /// <value>Last test run count for autotest flaky computing</value>
        [DataMember(Name = "flakyTestRunCount", IsRequired = true, EmitDefaultValue = true)]
        public int FlakyTestRunCount { get; set; }

        /// <summary>
        /// Auto rerun enabled
        /// </summary>
        /// <value>Auto rerun enabled</value>
        [DataMember(Name = "rerunEnabled", IsRequired = true, EmitDefaultValue = true)]
        public bool RerunEnabled { get; set; }

        /// <summary>
        /// Auto rerun attempt count
        /// </summary>
        /// <value>Auto rerun attempt count</value>
        [DataMember(Name = "rerunAttemptsCount", IsRequired = true, EmitDefaultValue = true)]
        public int RerunAttemptsCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AutoTestProjectSettingsApiResult {\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  IsFlakyAuto: ").Append(IsFlakyAuto).Append("\n");
            sb.Append("  FlakyStabilityPercentage: ").Append(FlakyStabilityPercentage).Append("\n");
            sb.Append("  FlakyTestRunCount: ").Append(FlakyTestRunCount).Append("\n");
            sb.Append("  RerunEnabled: ").Append(RerunEnabled).Append("\n");
            sb.Append("  RerunAttemptsCount: ").Append(RerunAttemptsCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
