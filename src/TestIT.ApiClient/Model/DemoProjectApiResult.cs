/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = TestIT.ApiClient.Client.FileParameter;
using OpenAPIDateConverter = TestIT.ApiClient.Client.OpenAPIDateConverter;

namespace TestIT.ApiClient.Model
{
    /// <summary>
    /// DemoProjectApiResult
    /// </summary>
    [DataContract(Name = "DemoProjectApiResult")]
    public partial class DemoProjectApiResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DemoProjectApiResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DemoProjectApiResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DemoProjectApiResult" /> class.
        /// </summary>
        /// <param name="projectId">Demo project ID (required).</param>
        /// <param name="projectGlobalId">Demo project global ID (required).</param>
        /// <param name="jobId">Job ID (required).</param>
        public DemoProjectApiResult(Guid projectId = default(Guid), long projectGlobalId = default(long), Guid jobId = default(Guid))
        {
            this.ProjectId = projectId;
            this.ProjectGlobalId = projectGlobalId;
            this.JobId = jobId;
        }

        /// <summary>
        /// Demo project ID
        /// </summary>
        /// <value>Demo project ID</value>
        [DataMember(Name = "projectId", IsRequired = true, EmitDefaultValue = true)]
        public Guid ProjectId { get; set; }

        /// <summary>
        /// Demo project global ID
        /// </summary>
        /// <value>Demo project global ID</value>
        [DataMember(Name = "projectGlobalId", IsRequired = true, EmitDefaultValue = true)]
        public long ProjectGlobalId { get; set; }

        /// <summary>
        /// Job ID
        /// </summary>
        /// <value>Job ID</value>
        [DataMember(Name = "jobId", IsRequired = true, EmitDefaultValue = true)]
        public Guid JobId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DemoProjectApiResult {\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  ProjectGlobalId: ").Append(ProjectGlobalId).Append("\n");
            sb.Append("  JobId: ").Append(JobId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
