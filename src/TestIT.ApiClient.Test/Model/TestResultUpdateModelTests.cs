/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TestIT.ApiClient.Model;
using TestIT.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TestIT.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing TestResultUpdateModel
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TestResultUpdateModelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TestResultUpdateModel
        //private TestResultUpdateModel instance;

        public TestResultUpdateModelTests()
        {
            // TODO uncomment below to create an instance of TestResultUpdateModel
            //instance = new TestResultUpdateModel();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TestResultUpdateModel
        /// </summary>
        [Fact]
        public void TestResultUpdateModelInstanceTest()
        {
            // TODO uncomment below to test "IsType" TestResultUpdateModel
            //Assert.IsType<TestResultUpdateModel>(instance);
        }


        /// <summary>
        /// Test the property 'FailureClassIds'
        /// </summary>
        [Fact]
        public void FailureClassIdsTest()
        {
            // TODO unit test for the property 'FailureClassIds'
        }
        /// <summary>
        /// Test the property 'Outcome'
        /// </summary>
        [Fact]
        public void OutcomeTest()
        {
            // TODO unit test for the property 'Outcome'
        }
        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }
        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Fact]
        public void LinksTest()
        {
            // TODO unit test for the property 'Links'
        }
        /// <summary>
        /// Test the property 'StepResults'
        /// </summary>
        [Fact]
        public void StepResultsTest()
        {
            // TODO unit test for the property 'StepResults'
        }
        /// <summary>
        /// Test the property 'Attachments'
        /// </summary>
        [Fact]
        public void AttachmentsTest()
        {
            // TODO unit test for the property 'Attachments'
        }
        /// <summary>
        /// Test the property 'DurationInMs'
        /// </summary>
        [Fact]
        public void DurationInMsTest()
        {
            // TODO unit test for the property 'DurationInMs'
        }
        /// <summary>
        /// Test the property 'Duration'
        /// </summary>
        [Fact]
        public void DurationTest()
        {
            // TODO unit test for the property 'Duration'
        }
        /// <summary>
        /// Test the property 'StepComments'
        /// </summary>
        [Fact]
        public void StepCommentsTest()
        {
            // TODO unit test for the property 'StepComments'
        }
        /// <summary>
        /// Test the property 'SetupResults'
        /// </summary>
        [Fact]
        public void SetupResultsTest()
        {
            // TODO unit test for the property 'SetupResults'
        }
        /// <summary>
        /// Test the property 'TeardownResults'
        /// </summary>
        [Fact]
        public void TeardownResultsTest()
        {
            // TODO unit test for the property 'TeardownResults'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'Trace'
        /// </summary>
        [Fact]
        public void TraceTest()
        {
            // TODO unit test for the property 'Trace'
        }

    }

}
