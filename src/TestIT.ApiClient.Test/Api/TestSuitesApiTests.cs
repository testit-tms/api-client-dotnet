/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing TestSuitesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TestSuitesApiTests : IDisposable
    {
        private TestSuitesApi instance;

        public TestSuitesApiTests()
        {
            instance = new TestSuitesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TestSuitesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TestSuitesApi
            //Assert.IsType<TestSuitesApi>(instance);
        }

        /// <summary>
        /// Test AddTestPointsToTestSuite
        /// </summary>
        [Fact]
        public void AddTestPointsToTestSuiteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ApiV2ProjectsProjectIdWorkItemsSearchPostRequest apiV2ProjectsProjectIdWorkItemsSearchPostRequest = null;
            //instance.AddTestPointsToTestSuite(id, apiV2ProjectsProjectIdWorkItemsSearchPostRequest);
        }

        /// <summary>
        /// Test ApiV2TestSuitesIdPatch
        /// </summary>
        [Fact]
        public void ApiV2TestSuitesIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //List<Operation> operation = null;
            //instance.ApiV2TestSuitesIdPatch(id, operation);
        }

        /// <summary>
        /// Test ApiV2TestSuitesIdRefreshPost
        /// </summary>
        [Fact]
        public void ApiV2TestSuitesIdRefreshPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.ApiV2TestSuitesIdRefreshPost(id);
        }

        /// <summary>
        /// Test ApiV2TestSuitesIdWorkItemsPost
        /// </summary>
        [Fact]
        public void ApiV2TestSuitesIdWorkItemsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //List<Guid> requestBody = null;
            //instance.ApiV2TestSuitesIdWorkItemsPost(id, requestBody);
        }

        /// <summary>
        /// Test ApiV2TestSuitesPost
        /// </summary>
        [Fact]
        public void ApiV2TestSuitesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2TestSuitesPostRequest apiV2TestSuitesPostRequest = null;
            //var response = instance.ApiV2TestSuitesPost(apiV2TestSuitesPostRequest);
            //Assert.IsType<TestSuiteV2GetModel>(response);
        }

        /// <summary>
        /// Test ApiV2TestSuitesPut
        /// </summary>
        [Fact]
        public void ApiV2TestSuitesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2TestSuitesPutRequest apiV2TestSuitesPutRequest = null;
            //instance.ApiV2TestSuitesPut(apiV2TestSuitesPutRequest);
        }

        /// <summary>
        /// Test DeleteTestSuite
        /// </summary>
        [Fact]
        public void DeleteTestSuiteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteTestSuite(id);
        }

        /// <summary>
        /// Test GetConfigurationsByTestSuiteId
        /// </summary>
        [Fact]
        public void GetConfigurationsByTestSuiteIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetConfigurationsByTestSuiteId(id);
            //Assert.IsType<List<ConfigurationModel>>(response);
        }

        /// <summary>
        /// Test GetTestPointsById
        /// </summary>
        [Fact]
        public void GetTestPointsByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetTestPointsById(id);
            //Assert.IsType<List<TestPointByTestSuiteModel>>(response);
        }

        /// <summary>
        /// Test GetTestResultsById
        /// </summary>
        [Fact]
        public void GetTestResultsByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetTestResultsById(id);
            //Assert.IsType<List<TestResultV2ShortModel>>(response);
        }

        /// <summary>
        /// Test GetTestSuiteById
        /// </summary>
        [Fact]
        public void GetTestSuiteByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetTestSuiteById(id);
            //Assert.IsType<TestSuiteV2GetModel>(response);
        }

        /// <summary>
        /// Test SearchWorkItems
        /// </summary>
        [Fact]
        public void SearchWorkItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //SearchWorkItemsRequest searchWorkItemsRequest = null;
            //var response = instance.SearchWorkItems(id, skip, take, orderBy, searchField, searchValue, searchWorkItemsRequest);
            //Assert.IsType<List<WorkItemShortModel>>(response);
        }

        /// <summary>
        /// Test SetConfigurationsByTestSuiteId
        /// </summary>
        [Fact]
        public void SetConfigurationsByTestSuiteIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //List<Guid> requestBody = null;
            //instance.SetConfigurationsByTestSuiteId(id, requestBody);
        }
    }
}
