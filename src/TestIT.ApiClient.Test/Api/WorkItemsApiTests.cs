/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing WorkItemsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WorkItemsApiTests : IDisposable
    {
        private WorkItemsApi instance;

        public WorkItemsApiTests()
        {
            instance = new WorkItemsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkItemsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WorkItemsApi
            //Assert.IsType<WorkItemsApi>(instance);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdAttachmentsPost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdAttachmentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //FileParameter file = null;
            //instance.ApiV2WorkItemsIdAttachmentsPost(id, file);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdCheckListTransformToTestCasePost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdCheckListTransformToTestCasePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2WorkItemsIdCheckListTransformToTestCasePost(id);
            //Assert.IsType<WorkItemModel>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdHistoryGet
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //var response = instance.ApiV2WorkItemsIdHistoryGet(id, skip, take, orderBy, searchField, searchValue);
            //Assert.IsType<List<WorkItemChangeModel>>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdLikeDelete
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdLikeDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.ApiV2WorkItemsIdLikeDelete(id);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdLikePost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdLikePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.ApiV2WorkItemsIdLikePost(id);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdLikesCountGet
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdLikesCountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2WorkItemsIdLikesCountGet(id);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdLikesGet
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdLikesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2WorkItemsIdLikesGet(id);
            //Assert.IsType<List<WorkItemLikeModel>>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdTestResultsHistoryGet
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdTestResultsHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //DateTime? from = null;
            //DateTime? to = null;
            //List<Guid> configurationIds = null;
            //List<Guid> testPlanIds = null;
            //List<Guid> userIds = null;
            //List<string> outcomes = null;
            //bool? isAutomated = null;
            //bool? automated = null;
            //List<Guid> testRunIds = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //var response = instance.ApiV2WorkItemsIdTestResultsHistoryGet(id, from, to, configurationIds, testPlanIds, userIds, outcomes, isAutomated, automated, testRunIds, skip, take, orderBy, searchField, searchValue);
            //Assert.IsType<List<TestResultHistoryReportModel>>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsIdVersionVersionIdActualPost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsIdVersionVersionIdActualPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid versionId = null;
            //var response = instance.ApiV2WorkItemsIdVersionVersionIdActualPost(id, versionId);
            //Assert.IsType<WorkItemModel>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsMovePost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsMovePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2WorkItemsMovePostRequest apiV2WorkItemsMovePostRequest = null;
            //var response = instance.ApiV2WorkItemsMovePost(apiV2WorkItemsMovePostRequest);
            //Assert.IsType<WorkItemShortModel>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsSearchPost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2ProjectsProjectIdWorkItemsSearchPostRequest apiV2ProjectsProjectIdWorkItemsSearchPostRequest = null;
            //var response = instance.ApiV2WorkItemsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2ProjectsProjectIdWorkItemsSearchPostRequest);
            //Assert.IsType<List<WorkItemShortModel>>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsSharedStepIdReferencesSectionsPost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsSharedStepIdReferencesSectionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid sharedStepId = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2WorkItemsSharedStepIdReferencesSectionsPostRequest apiV2WorkItemsSharedStepIdReferencesSectionsPostRequest = null;
            //var response = instance.ApiV2WorkItemsSharedStepIdReferencesSectionsPost(sharedStepId, skip, take, orderBy, searchField, searchValue, apiV2WorkItemsSharedStepIdReferencesSectionsPostRequest);
            //Assert.IsType<List<SharedStepReferenceSectionModel>>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsSharedStepIdReferencesWorkItemsPost
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsSharedStepIdReferencesWorkItemsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid sharedStepId = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2WorkItemsSharedStepIdReferencesWorkItemsPostRequest apiV2WorkItemsSharedStepIdReferencesWorkItemsPostRequest = null;
            //var response = instance.ApiV2WorkItemsSharedStepIdReferencesWorkItemsPost(sharedStepId, skip, take, orderBy, searchField, searchValue, apiV2WorkItemsSharedStepIdReferencesWorkItemsPostRequest);
            //Assert.IsType<List<SharedStepReferenceModel>>(response);
        }

        /// <summary>
        /// Test ApiV2WorkItemsSharedStepsSharedStepIdReferencesGet
        /// </summary>
        [Fact]
        public void ApiV2WorkItemsSharedStepsSharedStepIdReferencesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid sharedStepId = null;
            //var response = instance.ApiV2WorkItemsSharedStepsSharedStepIdReferencesGet(sharedStepId);
            //Assert.IsType<List<SharedStepReferenceModel>>(response);
        }

        /// <summary>
        /// Test CreateWorkItem
        /// </summary>
        [Fact]
        public void CreateWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateWorkItemRequest createWorkItemRequest = null;
            //var response = instance.CreateWorkItem(createWorkItemRequest);
            //Assert.IsType<WorkItemModel>(response);
        }

        /// <summary>
        /// Test DeleteAllWorkItemsFromAutoTest
        /// </summary>
        [Fact]
        public void DeleteAllWorkItemsFromAutoTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteAllWorkItemsFromAutoTest(id);
        }

        /// <summary>
        /// Test DeleteWorkItem
        /// </summary>
        [Fact]
        public void DeleteWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteWorkItem(id);
        }

        /// <summary>
        /// Test GetAutoTestsForWorkItem
        /// </summary>
        [Fact]
        public void GetAutoTestsForWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetAutoTestsForWorkItem(id);
            //Assert.IsType<List<AutoTestModel>>(response);
        }

        /// <summary>
        /// Test GetIterations
        /// </summary>
        [Fact]
        public void GetIterationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? versionId = null;
            //int? versionNumber = null;
            //var response = instance.GetIterations(id, versionId, versionNumber);
            //Assert.IsType<List<IterationModel>>(response);
        }

        /// <summary>
        /// Test GetWorkItemById
        /// </summary>
        [Fact]
        public void GetWorkItemByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? versionId = null;
            //int? versionNumber = null;
            //var response = instance.GetWorkItemById(id, versionId, versionNumber);
            //Assert.IsType<WorkItemModel>(response);
        }

        /// <summary>
        /// Test GetWorkItemChronology
        /// </summary>
        [Fact]
        public void GetWorkItemChronologyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetWorkItemChronology(id);
            //Assert.IsType<List<TestResultChronologyModel>>(response);
        }

        /// <summary>
        /// Test GetWorkItemVersions
        /// </summary>
        [Fact]
        public void GetWorkItemVersionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Guid? workItemVersionId = null;
            //int? versionNumber = null;
            //var response = instance.GetWorkItemVersions(id, workItemVersionId, versionNumber);
            //Assert.IsType<List<WorkItemVersionModel>>(response);
        }

        /// <summary>
        /// Test PurgeWorkItem
        /// </summary>
        [Fact]
        public void PurgeWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.PurgeWorkItem(id);
        }

        /// <summary>
        /// Test RestoreWorkItem
        /// </summary>
        [Fact]
        public void RestoreWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.RestoreWorkItem(id);
        }

        /// <summary>
        /// Test UpdateWorkItem
        /// </summary>
        [Fact]
        public void UpdateWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateWorkItemRequest updateWorkItemRequest = null;
            //instance.UpdateWorkItem(updateWorkItemRequest);
        }
    }
}
