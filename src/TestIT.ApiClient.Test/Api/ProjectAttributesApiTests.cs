/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing ProjectAttributesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProjectAttributesApiTests : IDisposable
    {
        private ProjectAttributesApi instance;

        public ProjectAttributesApiTests()
        {
            instance = new ProjectAttributesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProjectAttributesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProjectAttributesApi
            //Assert.IsType<ProjectAttributesApi>(instance);
        }

        /// <summary>
        /// Test CreateProjectsAttribute
        /// </summary>
        [Fact]
        public void CreateProjectsAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //CreateProjectsAttributeRequest createProjectsAttributeRequest = null;
            //var response = instance.CreateProjectsAttribute(projectId, createProjectsAttributeRequest);
            //Assert.IsType<CustomAttributeModel>(response);
        }

        /// <summary>
        /// Test DeleteProjectsAttribute
        /// </summary>
        [Fact]
        public void DeleteProjectsAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //Guid attributeId = null;
            //instance.DeleteProjectsAttribute(projectId, attributeId);
        }

        /// <summary>
        /// Test GetAttributeByProjectId
        /// </summary>
        [Fact]
        public void GetAttributeByProjectIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //Guid attributeId = null;
            //var response = instance.GetAttributeByProjectId(projectId, attributeId);
            //Assert.IsType<CustomAttributeModel>(response);
        }

        /// <summary>
        /// Test GetAttributesByProjectId
        /// </summary>
        [Fact]
        public void GetAttributesByProjectIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //DeletionState? isDeleted = null;
            //var response = instance.GetAttributesByProjectId(projectId, isDeleted);
            //Assert.IsType<List<CustomAttributeModel>>(response);
        }

        /// <summary>
        /// Test SearchAttributesInProject
        /// </summary>
        [Fact]
        public void SearchAttributesInProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //SearchAttributesInProjectRequest searchAttributesInProjectRequest = null;
            //var response = instance.SearchAttributesInProject(projectId, skip, take, orderBy, searchField, searchValue, searchAttributesInProjectRequest);
            //Assert.IsType<List<CustomAttributeGetModel>>(response);
        }

        /// <summary>
        /// Test UpdateProjectsAttribute
        /// </summary>
        [Fact]
        public void UpdateProjectsAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //UpdateProjectsAttributeRequest updateProjectsAttributeRequest = null;
            //instance.UpdateProjectsAttribute(projectId, updateProjectsAttributeRequest);
        }
    }
}
