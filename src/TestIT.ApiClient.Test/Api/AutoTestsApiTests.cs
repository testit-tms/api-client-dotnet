/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing AutoTestsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AutoTestsApiTests : IDisposable
    {
        private AutoTestsApi instance;

        public AutoTestsApiTests()
        {
            instance = new AutoTestsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AutoTestsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AutoTestsApi
            //Assert.IsType<AutoTestsApi>(instance);
        }

        /// <summary>
        /// Test ApiV2AutoTestsFlakyBulkPost
        /// </summary>
        [Fact]
        public void ApiV2AutoTestsFlakyBulkPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2AutoTestsFlakyBulkPostRequest apiV2AutoTestsFlakyBulkPostRequest = null;
            //instance.ApiV2AutoTestsFlakyBulkPost(skip, take, orderBy, searchField, searchValue, apiV2AutoTestsFlakyBulkPostRequest);
        }

        /// <summary>
        /// Test ApiV2AutoTestsIdPatch
        /// </summary>
        [Fact]
        public void ApiV2AutoTestsIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //List<Operation> operation = null;
            //instance.ApiV2AutoTestsIdPatch(id, operation);
        }

        /// <summary>
        /// Test ApiV2AutoTestsIdTestResultsSearchPost
        /// </summary>
        [Fact]
        public void ApiV2AutoTestsIdTestResultsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2AutoTestsIdTestResultsSearchPostRequest apiV2AutoTestsIdTestResultsSearchPostRequest = null;
            //var response = instance.ApiV2AutoTestsIdTestResultsSearchPost(id, skip, take, orderBy, searchField, searchValue, apiV2AutoTestsIdTestResultsSearchPostRequest);
            //Assert.IsType<List<AutotestResultHistoricalGetModel>>(response);
        }

        /// <summary>
        /// Test ApiV2AutoTestsIdWorkItemsChangedIdGet
        /// </summary>
        [Fact]
        public void ApiV2AutoTestsIdWorkItemsChangedIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2AutoTestsIdWorkItemsChangedIdGet(id);
            //Assert.IsType<List<Guid>>(response);
        }

        /// <summary>
        /// Test ApiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePost
        /// </summary>
        [Fact]
        public void ApiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid workItemId = null;
            //instance.ApiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePost(id, workItemId);
        }

        /// <summary>
        /// Test ApiV2AutoTestsSearchPost
        /// </summary>
        [Fact]
        public void ApiV2AutoTestsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2AutoTestsSearchPostRequest apiV2AutoTestsSearchPostRequest = null;
            //var response = instance.ApiV2AutoTestsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2AutoTestsSearchPostRequest);
            //Assert.IsType<List<AutoTestModel>>(response);
        }

        /// <summary>
        /// Test CreateAutoTest
        /// </summary>
        [Fact]
        public void CreateAutoTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAutoTestRequest createAutoTestRequest = null;
            //var response = instance.CreateAutoTest(createAutoTestRequest);
            //Assert.IsType<AutoTestModel>(response);
        }

        /// <summary>
        /// Test CreateMultiple
        /// </summary>
        [Fact]
        public void CreateMultipleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<AutoTestPostModel> autoTestPostModel = null;
            //var response = instance.CreateMultiple(autoTestPostModel);
            //Assert.IsType<List<AutoTestModel>>(response);
        }

        /// <summary>
        /// Test DeleteAutoTest
        /// </summary>
        [Fact]
        public void DeleteAutoTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteAutoTest(id);
        }

        /// <summary>
        /// Test DeleteAutoTestLinkFromWorkItem
        /// </summary>
        [Fact]
        public void DeleteAutoTestLinkFromWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string workItemId = null;
            //instance.DeleteAutoTestLinkFromWorkItem(id, workItemId);
        }

        /// <summary>
        /// Test GetAllAutoTests
        /// </summary>
        [Fact]
        public void GetAllAutoTestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? projectId = null;
            //string externalId = null;
            //long? globalId = null;
            //string _namespace = null;
            //bool? isNamespaceNull = null;
            //bool? includeEmptyNamespaces = null;
            //string className = null;
            //bool? isClassnameNull = null;
            //bool? includeEmptyClassNames = null;
            //bool? isDeleted = null;
            //bool? deleted = null;
            //List<string> labels = null;
            //int? stabilityMinimal = null;
            //int? minStability = null;
            //int? stabilityMaximal = null;
            //int? maxStability = null;
            //bool? isFlaky = null;
            //bool? flaky = null;
            //bool? includeSteps = null;
            //bool? includeLabels = null;
            //string externalKey = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //var response = instance.GetAllAutoTests(projectId, externalId, globalId, _namespace, isNamespaceNull, includeEmptyNamespaces, className, isClassnameNull, includeEmptyClassNames, isDeleted, deleted, labels, stabilityMinimal, minStability, stabilityMaximal, maxStability, isFlaky, flaky, includeSteps, includeLabels, externalKey, skip, take, orderBy, searchField, searchValue);
            //Assert.IsType<List<AutoTestModel>>(response);
        }

        /// <summary>
        /// Test GetAutoTestAverageDuration
        /// </summary>
        [Fact]
        public void GetAutoTestAverageDurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetAutoTestAverageDuration(id);
            //Assert.IsType<AutoTestAverageDurationModel>(response);
        }

        /// <summary>
        /// Test GetAutoTestById
        /// </summary>
        [Fact]
        public void GetAutoTestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetAutoTestById(id);
            //Assert.IsType<AutoTestModel>(response);
        }

        /// <summary>
        /// Test GetAutoTestChronology
        /// </summary>
        [Fact]
        public void GetAutoTestChronologyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetAutoTestChronology(id);
            //Assert.IsType<List<TestResultChronologyModel>>(response);
        }

        /// <summary>
        /// Test GetTestRuns
        /// </summary>
        [Fact]
        public void GetTestRunsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetTestRuns(id);
            //Assert.IsType<List<TestRunShortModel>>(response);
        }

        /// <summary>
        /// Test GetWorkItemResults
        /// </summary>
        [Fact]
        public void GetWorkItemResultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //DateTime? from = null;
            //DateTime? to = null;
            //List<Guid> configurationIds = null;
            //List<Guid> testPlanIds = null;
            //List<Guid> userIds = null;
            //List<string> outcomes = null;
            //bool? isAutomated = null;
            //bool? automated = null;
            //List<Guid> testRunIds = null;
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //var response = instance.GetWorkItemResults(id, from, to, configurationIds, testPlanIds, userIds, outcomes, isAutomated, automated, testRunIds, skip, take, orderBy, searchField, searchValue);
            //Assert.IsType<List<TestResultHistoryReportModel>>(response);
        }

        /// <summary>
        /// Test GetWorkItemsLinkedToAutoTest
        /// </summary>
        [Fact]
        public void GetWorkItemsLinkedToAutoTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //bool? isDeleted = null;
            //bool? isWorkItemDeleted = null;
            //var response = instance.GetWorkItemsLinkedToAutoTest(id, isDeleted, isWorkItemDeleted);
            //Assert.IsType<List<WorkItemIdentifierModel>>(response);
        }

        /// <summary>
        /// Test LinkAutoTestToWorkItem
        /// </summary>
        [Fact]
        public void LinkAutoTestToWorkItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //LinkAutoTestToWorkItemRequest linkAutoTestToWorkItemRequest = null;
            //instance.LinkAutoTestToWorkItem(id, linkAutoTestToWorkItemRequest);
        }

        /// <summary>
        /// Test UpdateAutoTest
        /// </summary>
        [Fact]
        public void UpdateAutoTestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateAutoTestRequest updateAutoTestRequest = null;
            //instance.UpdateAutoTest(updateAutoTestRequest);
        }

        /// <summary>
        /// Test UpdateMultiple
        /// </summary>
        [Fact]
        public void UpdateMultipleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<AutoTestPutModel> autoTestPutModel = null;
            //instance.UpdateMultiple(autoTestPutModel);
        }
    }
}
