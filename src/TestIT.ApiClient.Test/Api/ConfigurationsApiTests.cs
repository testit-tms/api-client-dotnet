/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing ConfigurationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ConfigurationsApiTests : IDisposable
    {
        private ConfigurationsApi instance;

        public ConfigurationsApiTests()
        {
            instance = new ConfigurationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConfigurationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ConfigurationsApi
            //Assert.IsType<ConfigurationsApi>(instance);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsCreateByParametersPost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsCreateByParametersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2ConfigurationsCreateByParametersPostRequest apiV2ConfigurationsCreateByParametersPostRequest = null;
            //var response = instance.ApiV2ConfigurationsCreateByParametersPost(apiV2ConfigurationsCreateByParametersPostRequest);
            //Assert.IsType<List<Guid>>(response);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsDeleteBulkPost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsDeleteBulkPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2ConfigurationsPurgeBulkPostRequest apiV2ConfigurationsPurgeBulkPostRequest = null;
            //var response = instance.ApiV2ConfigurationsDeleteBulkPost(apiV2ConfigurationsPurgeBulkPostRequest);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsIdDelete
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ApiV2ConfigurationsIdDelete(id);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsIdPatch
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //List<Operation> operation = null;
            //instance.ApiV2ConfigurationsIdPatch(id, operation);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsIdPurgePost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsIdPurgePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ApiV2ConfigurationsIdPurgePost(id);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsIdRestorePost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsIdRestorePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ApiV2ConfigurationsIdRestorePost(id);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsPurgeBulkPost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsPurgeBulkPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2ConfigurationsPurgeBulkPostRequest apiV2ConfigurationsPurgeBulkPostRequest = null;
            //instance.ApiV2ConfigurationsPurgeBulkPost(apiV2ConfigurationsPurgeBulkPostRequest);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsPut
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2ConfigurationsPutRequest apiV2ConfigurationsPutRequest = null;
            //instance.ApiV2ConfigurationsPut(apiV2ConfigurationsPutRequest);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsRestoreBulkPost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsRestoreBulkPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2ConfigurationsPurgeBulkPostRequest apiV2ConfigurationsPurgeBulkPostRequest = null;
            //var response = instance.ApiV2ConfigurationsRestoreBulkPost(apiV2ConfigurationsPurgeBulkPostRequest);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test ApiV2ConfigurationsSearchPost
        /// </summary>
        [Fact]
        public void ApiV2ConfigurationsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2ConfigurationsSearchPostRequest apiV2ConfigurationsSearchPostRequest = null;
            //var response = instance.ApiV2ConfigurationsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2ConfigurationsSearchPostRequest);
            //Assert.IsType<List<ConfigurationModel>>(response);
        }

        /// <summary>
        /// Test CreateConfiguration
        /// </summary>
        [Fact]
        public void CreateConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateConfigurationRequest createConfigurationRequest = null;
            //var response = instance.CreateConfiguration(createConfigurationRequest);
            //Assert.IsType<ConfigurationModel>(response);
        }

        /// <summary>
        /// Test GetConfigurationById
        /// </summary>
        [Fact]
        public void GetConfigurationByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetConfigurationById(id);
            //Assert.IsType<ConfigurationModel>(response);
        }
    }
}
