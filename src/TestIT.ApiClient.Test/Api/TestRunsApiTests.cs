/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing TestRunsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TestRunsApiTests : IDisposable
    {
        private TestRunsApi instance;

        public TestRunsApiTests()
        {
            instance = new TestRunsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TestRunsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TestRunsApi
            //Assert.IsType<TestRunsApi>(instance);
        }

        /// <summary>
        /// Test ApiV2TestRunsIdStatisticsFilterPost
        /// </summary>
        [Fact]
        public void ApiV2TestRunsIdStatisticsFilterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ApiV2TestRunsIdStatisticsFilterPostRequest apiV2TestRunsIdStatisticsFilterPostRequest = null;
            //var response = instance.ApiV2TestRunsIdStatisticsFilterPost(id, apiV2TestRunsIdStatisticsFilterPostRequest);
            //Assert.IsType<TestResultsStatisticsGetModel>(response);
        }

        /// <summary>
        /// Test ApiV2TestRunsIdTestPointsResultsGet
        /// </summary>
        [Fact]
        public void ApiV2TestRunsIdTestPointsResultsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2TestRunsIdTestPointsResultsGet(id);
            //Assert.IsType<List<TestPointResultModel>>(response);
        }

        /// <summary>
        /// Test ApiV2TestRunsIdTestResultsBulkPut
        /// </summary>
        [Fact]
        public void ApiV2TestRunsIdTestResultsBulkPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ApiV2TestRunsIdTestResultsBulkPutRequest apiV2TestRunsIdTestResultsBulkPutRequest = null;
            //instance.ApiV2TestRunsIdTestResultsBulkPut(id, apiV2TestRunsIdTestResultsBulkPutRequest);
        }

        /// <summary>
        /// Test ApiV2TestRunsIdTestResultsLastModifiedModificationDateGet
        /// </summary>
        [Fact]
        public void ApiV2TestRunsIdTestResultsLastModifiedModificationDateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2TestRunsIdTestResultsLastModifiedModificationDateGet(id);
            //Assert.IsType<DateTime>(response);
        }

        /// <summary>
        /// Test ApiV2TestRunsSearchPost
        /// </summary>
        [Fact]
        public void ApiV2TestRunsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2TestRunsSearchPostRequest apiV2TestRunsSearchPostRequest = null;
            //var response = instance.ApiV2TestRunsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2TestRunsSearchPostRequest);
            //Assert.IsType<List<TestRunShortGetModel>>(response);
        }

        /// <summary>
        /// Test ApiV2TestRunsUpdateMultiplePost
        /// </summary>
        [Fact]
        public void ApiV2TestRunsUpdateMultiplePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2TestRunsUpdateMultiplePostRequest apiV2TestRunsUpdateMultiplePostRequest = null;
            //instance.ApiV2TestRunsUpdateMultiplePost(apiV2TestRunsUpdateMultiplePostRequest);
        }

        /// <summary>
        /// Test CompleteTestRun
        /// </summary>
        [Fact]
        public void CompleteTestRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.CompleteTestRun(id);
        }

        /// <summary>
        /// Test CreateAndFillByAutoTests
        /// </summary>
        [Fact]
        public void CreateAndFillByAutoTestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAndFillByAutoTestsRequest createAndFillByAutoTestsRequest = null;
            //var response = instance.CreateAndFillByAutoTests(createAndFillByAutoTestsRequest);
            //Assert.IsType<TestRunV2GetModel>(response);
        }

        /// <summary>
        /// Test CreateAndFillByConfigurations
        /// </summary>
        [Fact]
        public void CreateAndFillByConfigurationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAndFillByConfigurationsRequest createAndFillByConfigurationsRequest = null;
            //var response = instance.CreateAndFillByConfigurations(createAndFillByConfigurationsRequest);
            //Assert.IsType<TestRunV2GetModel>(response);
        }

        /// <summary>
        /// Test CreateAndFillByWorkItems
        /// </summary>
        [Fact]
        public void CreateAndFillByWorkItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAndFillByWorkItemsRequest createAndFillByWorkItemsRequest = null;
            //var response = instance.CreateAndFillByWorkItems(createAndFillByWorkItemsRequest);
            //Assert.IsType<TestRunV2GetModel>(response);
        }

        /// <summary>
        /// Test CreateEmpty
        /// </summary>
        [Fact]
        public void CreateEmptyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateEmptyRequest createEmptyRequest = null;
            //var response = instance.CreateEmpty(createEmptyRequest);
            //Assert.IsType<TestRunV2GetModel>(response);
        }

        /// <summary>
        /// Test GetTestRunById
        /// </summary>
        [Fact]
        public void GetTestRunByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetTestRunById(id);
            //Assert.IsType<TestRunV2GetModel>(response);
        }

        /// <summary>
        /// Test SetAutoTestResultsForTestRun
        /// </summary>
        [Fact]
        public void SetAutoTestResultsForTestRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //List<AutoTestResultsForTestRunModel> autoTestResultsForTestRunModel = null;
            //var response = instance.SetAutoTestResultsForTestRun(id, autoTestResultsForTestRunModel);
            //Assert.IsType<List<Guid>>(response);
        }

        /// <summary>
        /// Test StartTestRun
        /// </summary>
        [Fact]
        public void StartTestRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.StartTestRun(id);
        }

        /// <summary>
        /// Test StopTestRun
        /// </summary>
        [Fact]
        public void StopTestRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.StopTestRun(id);
        }

        /// <summary>
        /// Test UpdateEmpty
        /// </summary>
        [Fact]
        public void UpdateEmptyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateEmptyRequest updateEmptyRequest = null;
            //instance.UpdateEmpty(updateEmptyRequest);
        }
    }
}
