/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using TestIT.ApiClient.Client;
using TestIT.ApiClient.Api;
// uncomment below to import models
//using TestIT.ApiClient.Model;

namespace TestIT.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing TestResultsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TestResultsApiTests : IDisposable
    {
        private TestResultsApi instance;

        public TestResultsApiTests()
        {
            instance = new TestResultsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TestResultsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TestResultsApi
            //Assert.IsType<TestResultsApi>(instance);
        }

        /// <summary>
        /// Test ApiV2TestResultsIdAggregatedGet
        /// </summary>
        [Fact]
        public void ApiV2TestResultsIdAggregatedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2TestResultsIdAggregatedGet(id);
            //Assert.IsType<TestResultModel>(response);
        }

        /// <summary>
        /// Test ApiV2TestResultsIdAttachmentsAttachmentIdPut
        /// </summary>
        [Fact]
        public void ApiV2TestResultsIdAttachmentsAttachmentIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid attachmentId = null;
            //instance.ApiV2TestResultsIdAttachmentsAttachmentIdPut(id, attachmentId);
        }

        /// <summary>
        /// Test ApiV2TestResultsIdAttachmentsInfoGet
        /// </summary>
        [Fact]
        public void ApiV2TestResultsIdAttachmentsInfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2TestResultsIdAttachmentsInfoGet(id);
            //Assert.IsType<List<AttachmentModel>>(response);
        }

        /// <summary>
        /// Test ApiV2TestResultsIdGet
        /// </summary>
        [Fact]
        public void ApiV2TestResultsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV2TestResultsIdGet(id);
            //Assert.IsType<TestResultModel>(response);
        }

        /// <summary>
        /// Test ApiV2TestResultsIdPut
        /// </summary>
        [Fact]
        public void ApiV2TestResultsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ApiV2TestResultsIdPutRequest apiV2TestResultsIdPutRequest = null;
            //instance.ApiV2TestResultsIdPut(id, apiV2TestResultsIdPutRequest);
        }

        /// <summary>
        /// Test ApiV2TestResultsSearchPost
        /// </summary>
        [Fact]
        public void ApiV2TestResultsSearchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? skip = null;
            //int? take = null;
            //string orderBy = null;
            //string searchField = null;
            //string searchValue = null;
            //ApiV2TestResultsSearchPostRequest apiV2TestResultsSearchPostRequest = null;
            //var response = instance.ApiV2TestResultsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2TestResultsSearchPostRequest);
            //Assert.IsType<List<TestResultShortGetModel>>(response);
        }

        /// <summary>
        /// Test ApiV2TestResultsStatisticsFilterPost
        /// </summary>
        [Fact]
        public void ApiV2TestResultsStatisticsFilterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiV2TestResultsSearchPostRequest apiV2TestResultsSearchPostRequest = null;
            //var response = instance.ApiV2TestResultsStatisticsFilterPost(apiV2TestResultsSearchPostRequest);
            //Assert.IsType<TestResultsStatisticsGetModel>(response);
        }

        /// <summary>
        /// Test CreateAttachment
        /// </summary>
        [Fact]
        public void CreateAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //FileParameter file = null;
            //var response = instance.CreateAttachment(id, file);
            //Assert.IsType<Guid>(response);
        }

        /// <summary>
        /// Test DeleteAttachment
        /// </summary>
        [Fact]
        public void DeleteAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid attachmentId = null;
            //instance.DeleteAttachment(id, attachmentId);
        }

        /// <summary>
        /// Test DownloadAttachment
        /// </summary>
        [Fact]
        public void DownloadAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid attachmentId = null;
            //Guid id = null;
            //int? width = null;
            //int? height = null;
            //ImageResizeType? resizeType = null;
            //string backgroundColor = null;
            //bool? preview = null;
            //var response = instance.DownloadAttachment(attachmentId, id, width, height, resizeType, backgroundColor, preview);
            //Assert.IsType<FileParameter>(response);
        }

        /// <summary>
        /// Test GetAttachment
        /// </summary>
        [Fact]
        public void GetAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid attachmentId = null;
            //var response = instance.GetAttachment(id, attachmentId);
            //Assert.IsType<AttachmentModel>(response);
        }

        /// <summary>
        /// Test GetAttachments
        /// </summary>
        [Fact]
        public void GetAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetAttachments(id);
            //Assert.IsType<List<AttachmentModel>>(response);
        }
    }
}
